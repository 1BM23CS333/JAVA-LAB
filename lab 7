import java.util.Scanner;

// Custom Exception Class
class WrongAgeException extends Exception {
    public WrongAgeException(String message) {
        super(message);
    }
}

// Base Class: Father
class Father {
    protected int age;

    public Father(int age) throws WrongAgeException {
        if (age < 0) {
            throw new WrongAgeException("Father's age cannot be negative!");
        }
        this.age = age;
    }
}

// Derived Class: Son
class Son extends Father {
    private int sonAge;

    public Son(int fatherAge, int sonAge) throws WrongAgeException {
        super(fatherAge); // Call the constructor of the Father class
        if (sonAge < 0) {
            throw new WrongAgeException("Son's age cannot be negative!");
        }
        if (sonAge >= fatherAge) {
            throw new WrongAgeException("Son's age cannot be greater than or equal to Father's age!");
        }
        this.sonAge = sonAge;
    }
}

public class ExceptionInheritanceDemo {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        try {
            // Taking user input for Father's age
            System.out.print("Enter Father's age: ");
            int fatherAge = scanner.nextInt();

            // Taking user input for Son's age
            System.out.print("Enter Son's age: ");
            int sonAge = scanner.nextInt();

            // Creating Son object which validates both ages
            Son son = new Son(fatherAge, sonAge);
            System.out.println("Father's Age: " + fatherAge);
            System.out.println("Son's Age: " + sonAge);

        } catch (WrongAgeException e) {
            // Handling the custom exception
            System.out.println("Exception: " + e.getMessage());
        } catch (Exception e) {
            // Handling any other unforeseen exceptions
            System.out.println("An unexpected error occurred: " + e.getMessage());
        } finally {
            scanner.close();
        }
    }
}


 



