java.util.Scanner; 
 
// Base class for Account 
class Account { 
    protected String customerName; 
    protected String accountNumber; 
    protected double balance; 
    protected String accountType; 
 
    // Constructor to initialize account details 
    public Account(String customerName, String accountNumber, String accountType, double 
initialBalance) { 
        this.customerName = customerName; 
        this.accountNumber = accountNumber; 
        this.accountType = accountType; 
        this.balance = initialBalance; 
    } 
 
    // Method to deposit money into account 
    public void deposit(double amount) { 
        balance += amount; 
        System.out.println("Deposit successful! Current balance: " + balance); 
    } 
 
    // Method to display current balance 
    public void displayBalance() { 
        System.out.println("Account balance: " + balance); 
    } 
 
    // Method to withdraw money from the account 
    public void withdraw(double amount) { 
        if (balance >= amount) { 
            balance -= amount; 

 
            System.out.println("Withdrawal successful! Current balance: " + balance); 
        } else { 
            System.out.println("Insufficient balance! Withdrawal failed."); 
        } 
    } 
 
    // Method to get account type (for displaying) 
    public String getAccountType() { 
        return accountType; 
    } 
} 
 
// Savings account class extends Account 
class SavAcct extends Account { 
    private static final double interestRate = 0.04; // 4% interest rate for savings account 
 
    // Constructor for Savings Account 
    public SavAcct(String customerName, String accountNumber, double initialBalance) { 
        super(customerName, accountNumber, "Savings", initialBalance); 
    } 
 
    // Method to compute and deposit interest 
    public void computeInterest() { 
        double interest = balance * interestRate; 
        balance += interest; 
        System.out.println("Interest of " + interest + " has been added to your account. New balance: " + 
balance); 
    } 
} 
 
// Current account class extends Account 
class CurAcct extends Account { 
    private static final double MIN_BALANCE = 500; // Minimum balance required for Current Account 
 
 
    private static final double PENALTY = 50; // Penalty fee for falling below minimum balance 
 
    // Constructor for Current Account 
    public CurAcct(String customerName, String accountNumber, double initialBalance) { 
        super(customerName, accountNumber, "Current", initialBalance); 
    } 
 
    // Method to check and apply penalty for low balance 
    public void checkMinimumBalance() { 
        if (balance < MIN_BALANCE) { 
            balance -= PENALTY; 
            System.out.println("Balance is below minimum. A penalty of " + PENALTY + " has been 
charged. New balance: " + balance); 
        } 
    } 
} 
 
public class Bank { 
    public static void main(String[] args) { 
        Scanner scanner = new Scanner(System.in); 
         
        // Create sample accounts (in real applications, these would be dynamic) 
        System.out.print("Enter customer name: "); 
        String customerName = scanner.nextLine(); 
 
        System.out.print("Enter account type (1 for Savings, 2 for Current): "); 
        int accountChoice = scanner.nextInt(); 
         
        scanner.nextLine(); // Consume newline character after integer input 
 
        System.out.print("Enter account number: "); 
        String accountNumber = scanner.nextLine(); 
         

 
        Account account = null; 
         
        if (accountChoice == 1) { 
            System.out.print("Enter initial deposit for Savings account: "); 
            double initialDeposit = scanner.nextDouble(); 
            account = new SavAcct(customerName, accountNumber, initialDeposit); 
        } else if (accountChoice == 2) { 
            System.out.print("Enter initial deposit for Current account: "); 
            double initialDeposit = scanner.nextDouble(); 
            account = new CurAcct(customerName, accountNumber, initialDeposit); 
        } else { 
            System.out.println("Invalid choice! Exiting program."); 
            return; 
        } 
 
        // Menu for operations 
        boolean running = true; 
        while (running) { 
            System.out.println("\nBank Operations Menu:"); 
            System.out.println("1. Deposit"); 
            System.out.println("2. Withdraw"); 
            System.out.println("3. Display Balance"); 
            System.out.println("4. Compute Interest (Savings account only)"); 
            System.out.println("5. Check and apply minimum balance penalty (Current account only)"); 
            System.out.println("6. Exit"); 
            System.out.print("Enter your choice: "); 
            int choice = scanner.nextInt(); 
 
            switch (choice) { 
                case 1: 
                    System.out.print("Enter deposit amount: "); 
                    double depositAmount = scanner.nextDouble(); 

 
                    account.deposit(depositAmount); 
                    break; 
                case 2: 
                    System.out.print("Enter withdrawal amount: "); 
                    double withdrawAmount = scanner.nextDouble(); 
                    account.withdraw(withdrawAmount); 
                    break; 
                case 3: 
                    account.displayBalance(); 
                    break; 
                case 4: 
                    if (account instanceof SavAcct) { 
                        ((SavAcct) account).computeInterest(); 
                    } else { 
                        System.out.println("Interest can only be computed for Savings account."); 
                    } 
                    break; 
                case 5: 
                    if (account instanceof CurAcct) { 
                        ((CurAcct) account).checkMinimumBalance(); 
                    } else { 
                        System.out.println("Minimum balance check can only be applied to Current account."); 
                    } 
                    break; 
                case 6: 
                    System.out.println("Exiting program."); 
                    running = false; 
                    break; 
                default: 
                    System.out.println("Invalid choice! Please select a valid option."); 
            } 
        } 

 
         
        scanner.close(); 
    } 
}

